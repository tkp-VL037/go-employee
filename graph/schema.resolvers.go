package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/tkp-VL037/go-employee/graph/model"
)

// AddEmployee is the resolver for the addEmployee field.
func (r *mutationResolver) AddEmployee(ctx context.Context, input *model.NewEmployee) (*model.EmployeeResponse, error) {
	panic(fmt.Errorf("not implemented: AddEmployee - addEmployee"))
}

// UpdateEmployeeDetail is the resolver for the updateEmployeeDetail field.
func (r *mutationResolver) UpdateEmployeeDetail(ctx context.Context, input *model.UpdateEmployee) (*model.EmployeeResponse, error) {
	panic(fmt.Errorf("not implemented: UpdateEmployeeDetail - updateEmployeeDetail"))
}

// DeleteEmployee is the resolver for the deleteEmployee field.
func (r *mutationResolver) DeleteEmployee(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteEmployee - deleteEmployee"))
}

// GetEmployees is the resolver for the getEmployees field.
func (r *queryResolver) GetEmployees(ctx context.Context) ([]*model.EmployeeResponse, error) {
	panic(fmt.Errorf("not implemented: GetEmployees - getEmployees"))
}

// GetEmployeeDetail is the resolver for the getEmployeeDetail field.
func (r *queryResolver) GetEmployeeDetail(ctx context.Context, id string) (*model.EmployeeResponse, error) {
	panic(fmt.Errorf("not implemented: GetEmployeeDetail - getEmployeeDetail"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
